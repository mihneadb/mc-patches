# HG changeset patch
# Parent 7c20e8e4e56e8b7c8def7d13ed42399f8ff8024d
# User Mihnea Dobrescu-Balaur <mihneadb@gmail.com>
Bug 890098 - cannot run dom/plugins xpcshell tests concurrently; follow-up

diff --git a/testing/xpcshell/remotexpcshelltests.py b/testing/xpcshell/remotexpcshelltests.py
--- a/testing/xpcshell/remotexpcshelltests.py
+++ b/testing/xpcshell/remotexpcshelltests.py
@@ -254,16 +254,19 @@ class XPCShellRemote(xpcshell.XPCShellTe
             self.device.mkDir(self.remoteTmpDir)
 
         self.env["XPCSHELL_TEST_TEMP_DIR"] = self.remoteTmpDir
         if self.interactive:
             self.log.info("TEST-INFO | temp dir is %s" % self.remoteTmpDir)
         return self.remoteTmpDir
 
     def setupPluginsDir(self):
+        if not os.path.isdir(self.pluginsPath):
+            return None
+
         # making sure tmp dir is set up
         self.setupTempDir()
 
         pluginsDir = self.remoteJoin(self.remoteTmpDir, "plugins")
         self.device.pushDir(self.pluginsPath, pluginsDir)
         if self.interactive:
             self.log.info("TEST-INFO | plugins dir is %s" % pluginsDir)
         return pluginsDir
diff --git a/testing/xpcshell/runxpcshelltests.py b/testing/xpcshell/runxpcshelltests.py
--- a/testing/xpcshell/runxpcshelltests.py
+++ b/testing/xpcshell/runxpcshelltests.py
@@ -233,21 +233,25 @@ class XPCShellTests(object):
                 'const _TESTING_MODULES_DIR = "%s";' % sanitized
             ])
 
         self.xpcsCmd.extend(['-f', os.path.join(self.testharnessdir, 'head.js')])
 
         if self.debuggerInfo:
             self.xpcsCmd = [self.debuggerInfo["path"]] + self.debuggerInfo["args"] + self.xpcsCmd
 
-        if self.pluginsPath:
-            self.pluginsDir = self.setupPluginsDir()
+        # Automation doesn't specify a pluginsPath and xpcshell defaults to
+        # $APPDIR/plugins. We do the same here so we can carry on with
+        # setting up every test with its own plugins directory.
+        if not self.pluginsPath:
+            self.pluginsPath = os.path.join(self.appPath, 'plugins')
+
+        self.pluginsDir = self.setupPluginsDir()
+        if self.pluginsDir:
             self.xpcsCmd.extend(['-p', self.pluginsDir])
-        else:
-            self.pluginsDir = None
 
     def buildTestPath(self):
         """
           If we specifiy a testpath, set the self.testPath variable to be the given directory or file.
 
           |testPath| will be the optional path only, or |None|.
           |singleFile| will be the optional test only, or |None|.
         """
@@ -289,16 +293,19 @@ class XPCShellTests(object):
                     raise Exception('%s file is not a file: %s' % (kind, path))
 
                 yield path
 
         return (list(sanitize_list(test['head'], 'head')),
                 list(sanitize_list(test['tail'], 'tail')))
 
     def setupPluginsDir(self):
+        if not os.path.isdir(self.pluginsPath):
+            return None
+
         pluginsDir = mkdtemp()
         # shutil.copytree requires dst to not exist. Deleting the tempdir
         # would make a race condition possible in a concurrent environment,
         # so we are using dir_utils.copy_tree which accepts an existing dst
         dir_util.copy_tree(self.pluginsPath, pluginsDir)
         if self.interactive:
             self.log.info("TEST-INFO | plugins dir is %s" % pluginsDir)
         return pluginsDir

# HG changeset patch
# Parent 8a04ef8c7475a1b09d97a40a3115202a36f0c7c2
# User Mihnea Dobrescu-Balaur <mihneadb@gmail.com>
Bug 907455 - Save all the data in a json file

diff --git a/testing/xpcshell/runxpcshelltests.py b/testing/xpcshell/runxpcshelltests.py
--- a/testing/xpcshell/runxpcshelltests.py
+++ b/testing/xpcshell/runxpcshelltests.py
@@ -16,16 +16,18 @@ from optparse import OptionParser
 from subprocess import Popen, PIPE, STDOUT
 from tempfile import mkdtemp, gettempdir
 from threading import Timer, Thread, Event, RLock
 import random
 import signal
 import socket
 import time
 
+resource_logs = []
+
 try:
     import psutil
     HAVE_PSUTIL = True
 except ImportError:
     HAVE_PSUTIL = False
 
 from automation import Automation, getGlobalLog, resetGlobalLog
 from automationutils import *
@@ -474,16 +476,18 @@ class XPCShellTestThread(Thread):
                     if data[k] and '_asdict' in dir(data[k]):
                         data[k] = data[k]._asdict()
 
                 # get test file path relative to $SRC_DIR
                 path = 'xpcshell'.join(name.split('xpcshell')[1:])
                 test_file = str(path[1:])
                 data['test_file'] = test_file
 
+                resource_logs.append(data)
+
                 json_str = json.dumps(data, sort_keys=True, indent=4)
                 self.log.info("TEST-INFO | %s | Resource usage:\n%s" % (name, json_str))
 
             stdout, stderr = self.communicate(proc)
 
             if self.interactive:
                 # Not sure what else to do here...
                 self.keep_going = True
@@ -1297,16 +1301,19 @@ class XPCShellTests(object):
             self.log.error("TEST-UNEXPECTED-FAIL | runxpcshelltests.py | No tests run. Did you pass an invalid --test-path?")
             self.failCount = 1
 
         self.log.info("INFO | Result summary:")
         self.log.info("INFO | Passed: %d" % self.passCount)
         self.log.info("INFO | Failed: %d" % self.failCount)
         self.log.info("INFO | Todo: %d" % self.todoCount)
 
+        with open(os.path.join(os.path.expanduser('~'), 'resources.json'), 'w') as f:
+            json.dump(resource_logs, f, sort_keys=True, indent=4)
+
         if autolog:
             self.post_to_autolog(self.xunitResults, xunitName)
 
         if xunitFilename is not None:
             self.writeXunitResults(filename=xunitFilename, results=self.xunitResults,
                                    name=xunitName)
 
         if gotSIGINT and not keepGoing:

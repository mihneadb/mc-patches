# HG changeset patch
# Parent 7ff96bd19c1c6ac6a2ae7460218a01e55badc2bc
# User Mihnea Dobrescu-Balaur <mihneadb@gmail.com>
Bug 911347 - Fix xpcshell static file cleanup on Windows

diff --git a/testing/xpcshell/runxpcshelltests.py b/testing/xpcshell/runxpcshelltests.py
--- a/testing/xpcshell/runxpcshelltests.py
+++ b/testing/xpcshell/runxpcshelltests.py
@@ -371,39 +371,18 @@ class XPCShellTestThread(Thread):
                 # We suspect the filesystem may still be making changes. Wait a
                 # little bit and try again.
                 time.sleep(1)
                 try_count += 1
             else:
                 # removed fine
                 return
 
-        # we try again later at the end of the run for plugin dirs (because windows!)
-        if directory == self.pluginsDir:
-            self.cleanup_dir_list.append(directory)
-            return
-
-        # we couldn't clean up the directory, and it's not the plugins dir,
-        # which means that something wrong has probably happened
-        if self.retry:
-            return
-
-        with LOG_MUTEX:
-            message = "TEST-UNEXPECTED-FAIL | %s | Failed to clean up directory: %s" % (name, sys.exc_info()[1])
-            self.log.error(message)
-            self.log_output(self.output_lines)
-            self.log_output(traceback.format_exc())
-
-        self.failCount += 1
-        xunit_result["passed"] = False
-        xunit_result["failure"] = {
-            "type": "TEST-UNEXPECTED-FAIL",
-            "message": message,
-            "text": "%s\n%s" % ("\n".join(self.output_lines), traceback.format_exc())
-        }
+        # we try cleaning up again later at the end of the run
+        self.cleanup_dir_list.append(directory)
 
     def clean_temp_dirs(self, name, stdout):
         # We don't want to delete the profile when running check-interactive
         # or check-one.
         if self.profileDir and not self.interactive and not self.singleFile:
             self.cleanupDir(self.profileDir, name, self.xunit_result)
 
         self.cleanupDir(self.tempDir, name, self.xunit_result)
@@ -1406,17 +1385,17 @@ class XPCShellTests(object):
                 tracebacks.append(test.traceback)
                 break
             keep_going = test.keep_going
 
         # restore default SIGINT behaviour
         signal.signal(signal.SIGINT, signal.SIG_DFL)
 
         self.shutdownNode()
-        # Clean up any slacker directories that might be lying around (Windows).
+        # Clean up any slacker directories that might be lying around
         # Some might fail because of windows taking too long to unlock them.
         # We don't do anything if this fails because the test slaves will have
         # their $TEMP dirs cleaned up on reboot anyway.
         for directory in self.cleanup_dir_list:
             try:
                 shutil.rmtree(directory)
             except:
                 self.log.info("INFO | %s could not be cleaned up." % directory)
